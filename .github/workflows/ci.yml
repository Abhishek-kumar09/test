name: Meshery
on:
#   push:
#     branches:
#       - 'master'
#     paths-ignore:
#       - 'docs/**'
#       - 'mesheryctl/**'
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  build-ui:
    name: UI build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        repository: meshery/meshery
        fetch-depth: 1
        path: .
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ secrets.NODE_VERSION }}
    - run: sudo npm i -g npm@latest
    - name: Cache node modules
      id: node-cache
      uses: actions/cache@v3.0.0
      with:
        path: |
          ~/cache
          ~/.cache
          /home/runner/.cache
          !~/cache/exclude
          **/node_modules
          /home/runner/.cache/Cypress
        key: ${{ runner.os }}-node-${{ hashFiles('**/lockfiles') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: |
        cd ui
        npm ci
        cd ..
        cd provider-ui
        npm ci
    - name: show package.json
      run: cat ui/package.json
    - name: build meshery-ui
      run: |
        make build-meshery-ui
    - name: build provider-ui
      run: |
        make build-provider-ui
    - name: upload meshery-ui artifact
      uses: actions/upload-artifact@v3
      with:
        name: meshery-ui-build
        path: ui/out/
    - name: upload Meshery-provider-ui artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: meshery-provider-ui build
        path: provider-ui/out/
  build-backend:
    name: Backend build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@master
        with:
          repository: meshery/meshery
          fetch-depth: 1
      - name: Setup Go
        uses: actions/setup-go@v3.0.0
        with:
          go-version: "1.17"
      - name: Setup Cache
        uses: actions/cache@v3.0.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-      
      - run: |
          GOPROXY=https://proxy.golang.org,direct GOSUMDB=off GO111MODULE=on go build -tags draft ./cmd/main.go
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: meshery
          path: ./main
  tests-ui-e2e:
    needs: [build-backend, build-ui]
    name: UI end-to-end tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          repository: meshery/meshery
          fetch-depth: 1
          path: .
      - name: Check out meshery-consul code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          repository: layer5io/meshery-consul
          path: ./meshery-consul
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: meshery
          path: cmd/
      - name: Setup go
        uses: actions/setup-go@v3.0.0
        with:
          go-version: ${{ secrets.GO_VERSION }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.NODE_VERSION }}
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.1.0
        with:
          cluster_name: "kind-cluster"
      - name: Create a out/ folder in meshery ui
        run: |
          mkdir -p ui/out
      - name: Download Meshery-ui artifacts
        uses: actions/download-artifact@v3
        with:
          name: meshery-ui-build
          path: ui/out/
      - name: Update /etc/hosts
        run: echo "127.0.0.1 mesherylocal.layer5.io" | sudo tee -a /etc/hosts
      - name: Run meshery-consul
        run: |
          mkdir -p /home/runner/.meshery/bin
          cd ./meshery-consul
          go run main.go &
          sleep 60
      - name: Set Release extensions
        run: |
          curl -s https://api.github.com/repos/layer5labs/meshery-extensions-packages/releases >> extension_releases.json
          export TAG=$(jq .[0].tag_name extension_releases.json)
          echo tag=$TAG >> $GITHUB_ENV
          echo $TAG
      - name: make directories
        run: |
          echo ${{env.tag}}
          echo ${{env}}
          mkdir -p /home/runner/.meshery/provider/Meshery/${{env.tag}}/provider/navigator
      - name: Run backend
        env:
          PROVIDER_BASE_URLS: https://meshery.layer5.io
          PORT: 9081
          ADAPTER_URLS: "mesherylocal.layer5.io:10000 mesherylocal.layer5.io:10001 mesherylocal.layer5.io:10002 mesherylocal.layer5.io:10003 mesherylocal.layer5.io:10004 mesherylocal.layer5.io:10008 mesherylocal.layer5.io:10009 mesherylocal.layer5.io:10007"
        run: |
          cd cmd
          chmod +x ./main
          BUILD=${{env.tag}} ./main &
      - name: Download Meshery Extension Package Version ${{env.tag}}
        run: |
          wget https://github.com/layer5labs/meshery-extensions-packages/releases/download/${{env.tag}}/provider-meshery.tar.gz 
          tar -xzf   provider-meshery.tar.gz -C /home/runner/.meshery/provider/Meshery/${{env.tag}}
      - name: show tree
        run: tree .meshery/
      - name: show runner tree
        run: tree /home/runner/.meshery
      - name: checkout cypress code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: ./cypress
      - name: Move cypress tests
        run: |
          rm -rf ui/cypress
          mv cypress/cypress ui/
          mv cypress/cypress.json ui/cypress.json
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          working-directory: ui
          spec: cypress/integration/e2e/**/*
          browser: chrome 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_token: ${{ secrets.PROVIDER_TOKEN }}
          CYPRESS_releasetag: ${{env.tag}}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3.0.0
        with:
          name: cypress-ss
          path: ui/cypress/screenshots
      - name: Upload Videos
        uses: actions/upload-artifact@v3.0.0
        if: always()
        with:
          name: cypress-ss
          path: ui/cypress/videos
