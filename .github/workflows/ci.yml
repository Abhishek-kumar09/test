name: Meshery
on:
#   push:
#     branches:
#       - 'master'
#     paths-ignore:
#       - 'docs/**'
#       - 'mesheryctl/**'
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  # build-backend:
  #   name: Backend build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@master
  #     with:
  #       repository: meshery/meshery
  #       fetch-depth: 1
  #       path: .
  #   - name: Setup Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: '1.16.7'
  #   - name: Setup Cache
  #     uses: actions/cache@v2
  #     with:
  #       path: ~/go/pkg/mod
  #       key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #       restore-keys: |
  #         ${{ runner.os }}-go-
  #   - run: |
  #       GOPROXY=https://proxy.golang.org,direct GOSUMDB=off GO111MODULE=on go build -tags draft ./cmd/main.go
  #   - name: Upload artifacts
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: meshery
  #       path: ./main
  build-ui:
    name: UI build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        repository: meshery/meshery
        fetch-depth: 1
        path: .
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ secrets.NODE_VERSION }}
    - run: sudo npm i -g npm@latest
    - name: Cache node modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: |
          ~/cache
          ~/.cache
          /home/runner/.cache
          !~/cache/exclude
          **/node_modules
          /home/runner/.cache/Cypress
        key: ${{ runner.os }}-node-${{ hashFiles('**/lockfiles') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: |
        cd ui
        npm i
        cd ..
        cd provider-ui
        npm i
    - name: build meshery-ui
      run: |
        make build-meshery-ui
    - name: build provider-ui
      run: |
        make build-provider-ui
  # tests-ui-e2e:
  #   needs: [build-backend, build-ui]
  #   name: UI end-to-end tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #       with:
  #         repository: meshery/meshery
  #         fetch-depth: 0
  #         path: .
  #     - name: Check out meshery-consul code
  #       uses: actions/checkout@v2
  #       with:
  #         repository: layer5io/meshery-consul
  #         path: ./meshery-consul
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: meshery
  #     - name: Setup go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ${{ secrets.GO_VERSION }}
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ secrets.NODE_VERSION }}
  #     - name: Cache node modules
  #       id: node-cache
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/cache
  #           ~/.cache
  #           /home/runner/.cache
  #           !~/cache/exclude
  #           **/node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/lockfiles') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Create k8s Kind Cluster
  #       uses: helm/kind-action@v1.1.0
  #       with:
  #         cluster_name: "kind-cluster"
  #     - name: Build Next App
  #       run: |
  #         cd ui
  #         npm i
  #         npm run build
  #         npm run export
  #     - name: Update /etc/hosts
  #       run: echo "127.0.0.1 mesherylocal.layer5.io" | sudo tee -a /etc/hosts
  #     - name: Run meshery-consul
  #       run: |
  #         mkdir -p /home/runner/.meshery/bin
  #         cd ./meshery-consul
  #         go run main.go &
  #         sleep 60
  #     - name: Run backend
  #       env:
  #         PROVIDER_BASE_URLS: http://localhost:9876
  #         PORT: 9081
  #         ADAPTER_URLS: "mesherylocal.layer5.io:10000 mesherylocal.layer5.io:10001 mesherylocal.layer5.io:10002 mesherylocal.layer5.io:10003 mesherylocal.layer5.io:10004 mesherylocal.layer5.io:10008 mesherylocal.layer5.io:10009 mesherylocal.layer5.io:10007"
  #       run: |
  #         chmod +x ./main
  #         ./main &
  #     - name: checkout cypress code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #         path: ./cypress
  #     - name: Move cypress tests
  #       run: |
  #         rm -rf ui/cypress
  #         mv cypress/cypress ui/
  #         mv cypress/cypress.json ui/cypress.json
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v2
  #       with:
  #         env: CYPRESS_token=${{secrets.PROVIDER_TOKEN}}
  #         working-directory: ui
  #         start: npm start
  #         wait-on: http://localhost:9081
  #         spec: cypress/integration/e2e/**/*          
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         CYPRESS_token: ${{ secrets.PROVIDER_TOKEN }}
  #     - name: Upload artifacts
  #       if: failure()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: cypress-ss
  #         path: ui/cypress/screenshots
  #     - name: Upload Videos
  #       if: failure()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: cypress-ss
  #         path: ui/cypress/videos
